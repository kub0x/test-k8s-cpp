name: CI

on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Discord pipeline start notification
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@master
        with:
          args: 'Running workflow {{ GITHUB_WORKFLOW }} with ID {{ GITHUB_RUN_ID }} related to commit {{ GITHUB_SHA }}.'
      
      - name : Get repository name
        run: echo "REPO_NAME=${{ github.event.repository.name }}" >> $GITHUB_ENV

      - name: Build container image
        id: docker-build
        run: docker build -t ${{ secrets.REGISTRY_NAME }}/$REPO_NAME:$(echo $GITHUB_SHA | head -c7) .
        
      - name: Check for docker build error
        if: failure() && steps.docker-build.outcome == 'failure'
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@master
        with:
          args: 'Dockerfile cannot be built.'

      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 1200

      - name: Push image to DigitalOcean Container Registry
        id: docker-push
        run: docker push ${{ secrets.REGISTRY_NAME1 }}/$REPO_NAME:$(echo $GITHUB_SHA | head -c7)
        
      - name: Check for docker push error
        if: failure() && steps.docker-push.outcome == 'failure'
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@master
        with:
          args: 'Could not push image to Docker Registry.'

      - name: Set image, container and deployment name on placeholder deployment file
        run: | 
          TAG=$(echo $GITHUB_SHA | head -c7)
          sed -i 's|<IMAGE>|${{ secrets.REGISTRY_NAME }}/'${REPO_NAME}':'${TAG}'|' $GITHUB_WORKSPACE/deployment.yaml
          sed -i 's|<DEPLOY-NAME>|'${REPO_NAME}'|' $GITHUB_WORKSPACE/deployment.yaml
          sed -i 's|<CONTAINER>|'${REPO_NAME}'|' $GITHUB_WORKSPACE/deployment.yaml
          sed -i 's|<NAMESPACE>|${{ github.ref_name }}|' $GITHUB_WORKSPACE/deployment.yaml
          sed -i 's|<INGRESS-HOST>|${{ secrets.HOSTNAME }}|' $GITHUB_WORKSPACE/deployment.yaml

      - name: Save DigitalOcean kubeconfig with short-lived credentials
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{ secrets.CLUSTER_NAME }}

      - name : Create namespace if doesn't exist
        run: kubectl create namespace ${{ github.ref_name }} --dry-run=client -o yaml | kubectl apply -f -

      - name: Deploy to DigitalOcean Kubernetes
        id: k8s-apply
        run: kubectl apply -f $GITHUB_WORKSPACE/deployment.yaml
        
      - name: Check for kubectl apply error
        if: failure() && steps.k8s-apply.outcome == 'failure'
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@master
        with:
          args: 'Workflow with ID {{ GITHUB_RUN_ID }} failed. Could not deploy to k8s.'

      - name: Verify deployment
        id: k8s-verify
        run: kubectl rollout status deployment/$REPO_NAME --namespace ${{ github.ref_name }}
        
      - name: Check for kubeclt rollout error
        if: failure() && steps.k8s-verify.outcome == 'failure'
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@master
        with:
          args: 'Workflow with ID {{ GITHUB_RUN_ID }} failed. Could not apply rollout.'

      - name: Discord pipeline completed notification
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@master
        with:
          args: 'Workflow {{ GITHUB_WORKFLOW }} with ID {{ GITHUB_RUN_ID }} succeeded.'